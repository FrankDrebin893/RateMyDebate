@using System.Diagnostics
@using System.Web.UI.WebControls
@using Microsoft.Ajax.Utilities
@using RateMyDebate.Models
@using RateMyDebate.ViewModels
@model RateMyDebate.ViewModels.DebateDisplayViewModel

@{
    ViewBag.Title = "LiveChat";
    Layout = "";
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/RMD.css")
    @Scripts.Render("~/bundles/modernizr")
    var user = Session["UserInfoSession"] as UserInformation;
}



@if (user == null)
{
    @Html.Partial("Spectator")
}
else if (user.accountId != Model.CreatorInformation.accountId)
{
    @Html.Partial("Creator")
}
else if (user.accountId == Model.ChallengerInformation.accountId)
{
    @Html.Partial("Challenger")
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>

<script src="~/Scripts/jquery.signalR-2.1.1.min.js"></script>

<script src="/signalr/hubs"></script>

<script type="text/javascript">
    $(function () {
        // Declare a proxy to reference the hub.
        var chat = $.connection.chatHub;

        // Create a function that the hub can call to broadcast messages.
        chat.client.broadcastMessage = function (name, message) {
            // Html encode display name and message.
            var encodedName = '<div /> @user.nickName';
            var encodedMsg = $('<div />').text(message).html();

            $('#discussion').append(encodedName + ' :' + encodedMsg);
        };
        // Set initial focus to message input box.
        $('#message').focus();
        // Start the connection.
        $.connection.hub.start().done(function () {
            $('#sendmessage').click(function () {
                // Call the Send method on the hub.
                chat.server.send($('#message').val(), $('#message').val());
                $('#message').val('').focus();
            });
        });
    });

    $(function () {
        var chatText = $.connection.chatHub;

    });
</script>
